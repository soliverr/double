<?xml version="1.0" encoding="utf-8"?>

<article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:lang="ru">

  <info>
    <title>Дубль</title>
    <title xml:lang="en">Double</title>
    
    <subtitle>Программа, которой нет!</subtitle>
    <subtitle xml:lang="en">The Program that does not exist!</subtitle>    

    <authorgroup>
        <author>
            <personname>Кряжевских Сергей</personname>
            <personname xml:lang="en">Kryazhevskikh Sergey</personname>
            <email>soliverr@gmail.com</email>
        </author>
    </authorgroup>

    <copyright>
        <year>2016</year>
        <holder>Public Domain</holder>
    </copyright>
    
    <edition>1.0</edition>
    <date>2016-04-07</date>
    
    <abstract>
        <para>
            <emphasis>Дубль</emphasis>: Сохраняйте, структурируйте, воспроизводите, обменивайтесь знаниями и своим личным опытом.
        </para>
    </abstract>
  </info>
  
  <section xml:id="introduction">
    <title>Введение</title>
    <title xml:lang="en">Introduction</title>

    <para>
    Большинство из нас, работая за компьютером, изобретают свои уникальные способы организации информации, методы и
    приёмы работы. Каждый из нас, так или иначе настраивает для себя рабочее место, выбирает, устанавливает и настраивает
    специальные программы.
    </para>


    <para>    
    Одним из действенных способов сохранения и обмена знаниями по организации удобной работы в вычислительной среде является
    написание технических статей: Wiki-документации, обзоров в журналах, сообщений на формумах и в блогах. И таких знаний
    генерируется всё больше и больше.
    </para>

    Глобальные поисковые системы заметно облегчают поиск необходимой информации: поисковые запросы ранжируются по популярности,
    результаты поиска ранжируются по релевантности и контексту (области применения). На повседневные нужды пользователей из
    разряда "как сделать" приходится множество сайтов, технических журналов, экспертных сообществ, дающих обоснованные советы
    и объяснения, приводящие аргументы за и против, дающие порядок действий и выполняемых команд.

    Всё как в одной известной детской спортивной передаче из ГДР "Делай с нами, делай как мы, делай лучше нас".

    Подобная организация информации и знаний подразумевает обязательное прочтение подобного рода статей человеком. Зачастую
    подобного рода статьи неявно требуют определённых базовых знаний в области информационных (компьютерных) технологий. Даже
    если в статье приводится точный порядок действий в виде исполняемых команд, повторение этого порядка не гарантирует
    достижение желаемого результата: могут возникнуть непредвиденные автором текста ошибки, интерпретация которых, требует
    определённого уровня знаний.

    Закономерно возникает простой вопрос: почему компьютер не может самостоятельно воспроизвести необходимую последовательность
    действий для достижения желаемой цели?

    Ответом на этот вопрос стала идея проекта Double: так организовать и выразить знания, что бы в дальнейшем эти знания могли 
    быть воспроизведены на другом компьютере. 
    
    Именно организовать и выразить знания, а не создать программу для хранания и обработки
    данных, знаний. При этом, знания могут быть из совершенно разных сфер человеческой деятельности. Непременным условием является
    возможность воспроизведения этих знаний на компьютере. Вот типичные примеры подобного рода знаний:
    * организация и настройка графического окружения рабочего стола типичным для пользователя способом, так называемый "тюнинг"
    программы менеджера рабочего окружения;
    * установка и настройка привычного набора программ, создание привычной иерархии каталогов в файловой системе и прочее.

    Подобные знания носят индивидуальный характер: необходимо сохранить способ и приёмы, которые использовались при работе на компьютере
    при решении определённой задачи для достижения определённой цели. Если подобная цель возникнет снова, то хотелось бы 
    автоматизировать её достижение, а также обосновать почему был выбран именно такой способ.

    Описывая найденный способ достижения цели и решения сопутствующих задач в виде технической статьи (в Wiki, блоге или где-то ещё),
    необходимо добиться возможности воспроизведения этого способа как человеком, так и компьютером.

    Таким образом, проект Double - это поиск способа сохранения и организации индивидуальных знаний, который бы сделал возможным
    обмен и воспроизведение эффективных приёмов работы на компьютере, при этом знания должны быть
    выражены таким образом, что бы могли однозначно интерпретироваться как человеком, так и компьютером. Это способ описания 
    целей и медотов их достижения в различных средах обитания пользователей.

    </section>

    <para>
        Со времён изобретения человечеством письменности в процессе организации знаний мало что изменилось. Знания накапливаются
        в том или ином виде в письменных источниках. Их обработка связана с процессом чтения и дальнейшего осмысления 
        прочитанного материала. Процесс "вывода на знаниях" или генерации новых идей скрыт в глубинах сознания человека разумного.
    </para>
    
    <para>
        Что несомненно изменилось в XXI веке, так это способы хранения, представления и обмена знаниями. С развитием вычислительных
        систем и систем связи появились понятия <emphasis>"информация"</emphasis> и <emphasis>"данные"</emphasis>.
    </para>
    
    <para>
        Развитие технических средств и, особенно, вычислительной техники сделало возможным накапливать огромные объёмы данных,
        передавать огромные объёмы информации. Новые данные стали генерировать не только люди, но и вычислительные машины,
        устройства, приборы.
    </para>
    
    <para>
        В вычислительных системах данные всегда организованы каким-либо образом, облегчающим их обработку в данной вычислительной
        системе. По мере увеличения разнообразия вычислительных систем возникла потребность в обмене накопленными данными между
        вычислительными системами; стали появляться специальные форматы обмена данными. Постепенно появилась потребность
        представления таких данных обмена для человека в специальном формате, доступном для чтения как вычислительной системой
        так и человеком.
    </para>
    
    <para>
        По мере развития такого рода форматов обмена данными, появилась потребность однозначной интерпретации этих форматов
        различными <emphasis>"системами обработки"</emphasis>, включая человека. Потребовалось обмениваться не просто набором данных,
        но и "метаданными", включающими семантику исходных данных: типы данных, методы (алгоритмы) их обработки.
    </para>
    
    <para>
        Своего рода бум произошёл после разработки консорциумом W3C специального языка для представления данных XML. XML ввёл достаточно
        простую модель представления данных и синтаксис её описания. Сущности, используемые в данной модели: записи и их атрибуты. В XML
        атрибут является частью сущности; взаимодействие сущностей никак не регламентируется. XML ввёл в обиход понятие схемы данных, которая
        определяет типы используемых сущностей: какие атрибуты и какого машинного типа представления могут быть у сущности; какие сущности
        могут быть вложены в другие сущности.
    </para>

    <para>
        В XML получили своё выражение два аспекта вычислительных систем:
         <itemizedlist>
            <listitem><para>Все данные, используемые вычислительными системами имею свой тип (integer, float, double, char и т.п.).
            Это свойство данных является неотъемлемой частью вычислительных систем и неразрывно связано с аппаратной архитектурой и
            устройством вычислительных систем.</para></listitem>
            <listitem><para>Данные объединяются по средством специальных структур, называемых записями (records). Это свойство данных,
            по-видимому, связано с восприятием человеком некоторого набора объектов в виде множества и оперированием таким множеством,
            как единым объектом. Множество (запись) и объекты, его составляющие (поля), интуитивно воспринимаются в виде отношения 
            "часть - целое". При этом в запись входят данные различных "машинных" типов.</para></listitem>
    </para>

    <para>
        Извечный камень преткновения вычислительных систем - каким образом рассматривать алгоритмы обработки данных: способы обработки данных,
        выраженные на каком-либо языке программирования?
    </para>

    <para>
        Исторически, прогрммная область, трактовалась как специальная область данных, которые может исполнять вычислительная система. 
        Таким образом, данные, организованные в какие-либо записи, и программа, стали разделяться и храниться отдельно друг от друга.
        Наборы данных, представляющие программы, снабжались метаданными, которые позволяли однозначно интерпретировать их как предназначенные
        для исполнения. А просто наборы данных, снабжались метаданными, которые позволяли однозначно интерпретировать структуру их записей.
    </para>

        Если оставить в стороне различия в архитектурах вычислительных систем, а также различные варианты компоновки программ и данных, то
        можно обнаружить, что на сегодняшний момент основным способом различения наборов данных является расширение файлов, хранящих в себе
        данные или программы. Это пример объединения метаданных и данных в одной сущности, называемой файл. Существование метаданных расширения
        поддерживается тем, что в вычислительных системах реализовано множество алгоритмов, поведение которых управляется 
        метаданными-расширением: поиск программы для просмотра и редактирования файла, возможность запуска файла на исполнение, изменение
        представления файла в рабочей среде человеко-машинного интерфейса и пр.

        Эволюция понятия записи, привела к появлению понятия класс и инкапсуляции - объединению данных и методов их обработки в единой
        структуре. Это реализовано в парадигме ООП. Интересной особенностью развития ООП является то, что появились своего рода метапрограммы,
        реализующие условия, в которых стало возможно объединять данные и методы их обработки, а также выполнять вызов подобных методов, то
        есть, фактически, выполнять обработку данных.

        Таким образом, можно увидеть следующие тенденции развития взаимоотношений данных и программ
        * данные эволюционируют путём добавления метаданных
        * метаданные влияют на появление новых программ для их обработки
        * программы реализуют среду, в которой данные и метаданные определённого уровня, интерпретируются однозначно с тем, что 
        было заложено человеком на этапе проектирования и создания набора данных и программы их обработки

        Имея набор данных необходимо написать программу для их обработки, для этого требуется описать метаданные и создать алгоритмы. То есть,
        единая сущность операция с данным в связи с особенностью выч систем разделяется на метаданные и алгоритмы их обработки Для их выражения
        использовались разные средства.

        

    <para>
        Таким образом, "знания" в вычислительных системах представлены как некий набор метаданных над определёнными исходными данными. Семантика
        в метаданных может быть выражена декларативно, либо скрыта в алгоритмах обработки и процедурах в вычислительных системах.
        Метаданные, в свою очередь, могут быть заданы для исходных метаданных более "низкого" уровня. Основным, принципиальным отличием
        нового уровня метаданных, является наличие новых алгоритмов их обработки. Новые алгоритмы обработки могут потребовать
        нового формата представления данных. 
    </para>
    
    <para>
        Принципиальным отличием искуственных систем обработки данных от естественных является наличие алгоритма обработки данных.
        В контексте знаний это вытекает в следующее:
        * проектируется способ представления данных, выражающих знания
        * проектируется алгоритм обработки данных, реализующий обработку знаний ("вывод на знаниях")
        
        Сам по себе алгоритм обрабатывает данные заранее заданным способом и не осознаёт факт обработки "знаний".
    </para>
    
    Получение базовых форматов представления знаний и базовых алгоритмов обработки знаний относится к области искусственного
    интеллекта и экспертных систем.
    
    Создать помощника...
    
    
    <para>
        Потребность в организации личных знаний инспирировало идею создания проекта <emphasis>Дубль</emphasis>.
    </para>
    
    <para>
        Основные принципы, закладываемые в проект <emphasis>Дубль</emphasis>, можно описать следующим образом:
        <itemizedlist mark='baseidea'>
            <listitem><para>Организация знаний начинается любым доступным способом с использованием программно-вычислительных
                            средств.<listitem><para>
            <listitem><para>Знания должны быть представлены в форме доступной для использования вычислительными системами
                            и другими людьми.<listitem><para>
            <listitem><para>Не создавать программу для работы со знаниями до тех пор, пока можно обойтись другими
                            программами.</para></listitem>
            <listitem><para>Не создавать универсальную программу работы со знаниями.</para></listitem>
            <listitem><para>Не создавать всеобщее хранение всех знаний.</para></listitem>            
            <listitem><para>Структуры хранения знаний могут быть разнообразными и отражают способ хранения знаний
                            конкретного человека.</para></listitem>
            <listitem><para>Сохранение знаний с целью их повторного использования. Знания должны быть представлены так, что бы
                            допускалось их повторное периодическое использование вычислительными системами и другими людьми.
                            </para></listitem>
            <listitem><para>Не стремиться к созданию централизованной унифицированной системы хранения и обработки знаний.
                            Знания хранятся и организуются в том месте, где они необходимы в каждый конкретный момент.
                            Знания организуются фрагментарно. Каждый фрагмент может быть организован своим собственным
                            способом.</para></listitem>
            <listitem><para>Методы обмена фрагментами знаний между людьми с использованием программно-вычислительных средств
                            должны быть описаны в создаваемой структуре знаний.</para></listitem>
            <listitem><para>Эволюционный процесс хранения и обработки знаний.</para></listitem>
        </itemizedlist>
    </para>


    <para>
        Знания в системе <emphasis>Дубль</emphasis> должны быть выражены декларативно. В контексте вычислительных систем это 
        означает, что приоритет отдаётся проектированию и описанию структур хранения и способов обработки, а не написанию 
        алгоритмов и программ.
    </para>
    
    <para>
        <emphasis>Первичной целью является получение декларативного описания знаний</emphasis>. В зависимости от способа 
        интерпретации данной декларации могут быть реализованы различные модели и алгоритмы представления и обработки знаний.
    </para>
    
    <section>
        <title>Физическая интерпретация</title>
        
        <para>
            Знания - это своего рода элементарные частицы, которые взаимодействуют друг с другом. Модель ядра Бора - модель фрейма
            при представлении знаний: сильные связи сущности и её обязательных атрибутов, слабые связи - необязательные атрибуты.
            Взаимодействие - организация материи определенного вида знаний. Нахождение законов позволяет новым знаниям встраиваться
            в материю (мир, домен) уже организованных знаний или разрушать её.
        </para>
    </section>
   
    <section>
        <title>Биологическая интерпретация</title>
        
        <para>
            Эволюционный процесс организации знаний, код организации знаний, в котором записан путь от начала к текущему состоянию
            организации. Интерпретация данного кода, сначала человеком, затем программой.
        </para>
    </section>
   
    <section>
        <title>Математическая инерпретация</title>
        
        <para>        
            Сети знаний. Разрозненные сети, организованные внутри себя по определённым правилам. Граф переходов из одного состояния
            в другое. Узлы графа - состояние системы и цели, дуги - действия, которые необходимо совершить. Дуга - это снова граф
            переходов, для решения конкретных задач. 
        </para>
        
        <para>
            Граф-сеть эволюционирует, его можно рассматривать как материю знаний, молекулу.
            Графы зананий можно помещать в различные среды обитания. Законы внешние и внутренние. 
            Закон реализуется в виде программы, представляется в виде графа знаний.
            Цели - сильно связанные частицы знаний, наиболее однозначно представленные знания с точки зрения их повторения и оценки.
            Узель-цель можно интерпретировать как ребро графа для прехода к следующей цели.
        </para>
    </section>
     
  </section>        
  
  <section>
    <title>Semantic web: XML, RDF и RDFa</title>
  </section>
  
  <section>
    <title>Базовый метод представления знаний</title>
  </section>

  <section>
    <title>Элементы знаний</title>
  </section>

  <section>
    <title>Схема знаний Дубль</title>
  </section>
        
  <section>
    <title>Организация знаний Дубль</title>
  </section>
        
  
</article>
